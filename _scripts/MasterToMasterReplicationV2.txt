Server#1 ORD - 207.148.8.61 
Server#2 SV  - 144.202.105.155 

#**** BOTH IN SERVER 1 AND SERVER 2 ****
mysql -p
SELECT UUID();
nano /var/lib/mysql/auto.cnf

#********************************************************
sudo nano /etc/mysql/my.cnf

server_id           = 1
bind-address        = 207.148.8.61
log_bin             = /var/log/mysql/mysql-bin.log
log_bin_index       = /var/log/mysql/mysql-bin.log.index
relay_log           = /var/log/mysql/mysql-relay-bin
relay_log_index     = /var/log/mysql/mysql-relay-bin.index
expire_logs_days    = 10
max_binlog_size     = 100M
log_slave_updates   = 1
auto-increment-increment = 2
auto-increment-offset = 1

sudo /etc/init.d/mysql restart

mysql> GRANT REPLICATION SLAVE ON *.* TO 'ReplicationMgr'@'144.202.105.155' IDENTIFIED BY 'CopperGold@01';
Where 144.202.105.155 is a IP address of the second server.


#********************************************************
sudo nano /etc/mysql/my.cnf
 
server_id           = 2
bind-address        = 144.202.105.155
log_bin             = /var/log/mysql/mysql-bin.log
log_bin_index       = /var/log/mysql/mysql-bin.log.index
relay_log           = /var/log/mysql/mysql-relay-bin
relay_log_index     = /var/log/mysql/mysql-relay-bin.index
expire_logs_days    = 10
max_binlog_size     = 100M
log_slave_updates   = 1
auto-increment-increment = 2
auto-increment-offset = 2

mysql> GRANT REPLICATION SLAVE ON *.* TO 'ReplicationMgr'@'207.148.8.61' IDENTIFIED BY 'CopperGold@01';
Where 207.148.8.61 is a IP address of the first server.

#********************************************************
Configure MySQL Master on Both Server
Now, you will need to tell each server that other server is master.

Configure Second Server as Master
Before starting, you will need to check master status on the first server.

On the first server, log in to mysql shell and check the master server status with the following command:

mysql -u root -p 
mysql> SHOW MASTER STATUS;
You should see the following output:

+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql-bin.000001 |      ### |              |                  |
+------------------+----------+--------------+------------------+
1 row in set (0.00 sec)
| mysql-bin.000002 |      807 |
From above output, you will need to note mysql-bin.000001 and Position 276. Next, tell second server that first server is it's master.

*************** On the second server, run the following command:***************

mysql -u root -p 
STOP SLAVE;
CHANGE MASTER TO master_host='207.148.8.61', master_port=3306, master_user='ReplicationMgr', master_password='CopperGold@01', master_log_file='mysql-bin.000002', master_log_pos=807;
START SLAVE;

***** Configure First Server as Master
***** First, check the master status of the second server and note the file and position values.

mysql> SHOW MASTER STATUS;
You should see the following output:
+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql-bin.000001 |      276 |              |                  |
+------------------+----------+--------------+------------------+
1 row in set (0.00 sec)
mysql-bin.000001 |      455
From the above output, you will need to note mysql-bin.000001 and Position 276.

***** Next, tell first server that second server is it's master.
***** On the first server, run the following command:

mysql> STOP SLAVE ; 
CHANGE MASTER TO master_host='144.202.105.155', master_port=3306, master_user='ReplicationMgr', master_password='CopperGold@01', master_log_file='mysql-bin.000001', master_log_pos=455; 
START SLAVE;
Once you are done, you can proceed to next step.

*************** Testing Replication ***************
Once everything is setup properlly, it's time to check whether database Replication is working or not.

To do so, create a database with name testingdb on the first server:

mysql -u root -p 
create database testingdb;

Next, on the second server. Check whether this database is created or not.

mysql -u root -p 
show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| limesurvey         |
| mysql              |
| performance_schema |
| testingdb          |
+--------------------+
In the above output, you should see that database testingdb is created.


*************** TEST REPLICATION ********************
Next, on the second server. Create a table in this database.

mysql> CREATE TABLE testingdb.testuser ( id INT, name VARCHAR(20));
Next, on the first server. Check whether this table is created or not:

mysql> use testingdb; 
mysql> show tables;
+---------------------+
| Tables_in_testingdb |
+---------------------+
|                     |
| testuser            |
+---------------------+
In the above output, you should see tha